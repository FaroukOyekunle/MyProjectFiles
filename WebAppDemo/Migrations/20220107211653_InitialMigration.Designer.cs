// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppDemo.Context;

namespace WebAppDemo.Migrations
{
    [DbContext(typeof(WebAppDemoContext))]
    [Migration("20220107211653_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("WebAppDemo.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CaseDateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CaseDateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("CaseName")
                        .HasColumnType("text");

                    b.Property<int>("CaseNumber")
                        .HasColumnType("int");

                    b.Property<string>("CaseStatus")
                        .HasColumnType("text");

                    b.Property<string>("CaseType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("WebAppDemo.Entities.ChiefJudge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ChiefJudgePhoto")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("MailClientId")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MailClientId");

                    b.ToTable("ChiefJudges");
                });

            modelBuilder.Entity("WebAppDemo.Entities.ChiefJudgeCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<int>("ChiefJudgeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("ChiefJudgeId");

                    b.ToTable("ChiefJudgeCases");
                });

            modelBuilder.Entity("WebAppDemo.Entities.MailClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("MailClientFirstName")
                        .HasColumnType("text");

                    b.Property<string>("MailClientLastName")
                        .HasColumnType("text");

                    b.Property<string>("MailClientOtherName")
                        .HasColumnType("text");

                    b.Property<string>("MailClientPhoto")
                        .HasColumnType("text");

                    b.Property<string>("MailClientTag")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MailClients");
                });

            modelBuilder.Entity("WebAppDemo.Entities.ChiefJudge", b =>
                {
                    b.HasOne("WebAppDemo.Entities.MailClient", "MailClient")
                        .WithMany("ChiefJudges")
                        .HasForeignKey("MailClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailClient");
                });

            modelBuilder.Entity("WebAppDemo.Entities.ChiefJudgeCase", b =>
                {
                    b.HasOne("WebAppDemo.Entities.Case", "Case")
                        .WithMany("ChiefJudgeCases")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppDemo.Entities.ChiefJudge", "ChiefJudge")
                        .WithMany("ChiefJudgeCases")
                        .HasForeignKey("ChiefJudgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("ChiefJudge");
                });

            modelBuilder.Entity("WebAppDemo.Entities.Case", b =>
                {
                    b.Navigation("ChiefJudgeCases");
                });

            modelBuilder.Entity("WebAppDemo.Entities.ChiefJudge", b =>
                {
                    b.Navigation("ChiefJudgeCases");
                });

            modelBuilder.Entity("WebAppDemo.Entities.MailClient", b =>
                {
                    b.Navigation("ChiefJudges");
                });
#pragma warning restore 612, 618
        }
    }
}
